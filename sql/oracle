ORA-30004 :使用sys_connect_by_path 函数时,不能将分隔符作为列值的一部分
原因是我们在使用 sys_connect_by_path(sln, ';')这个函数的时候，用什么分割，然而库里该字段恰好有数据带有这符号，导致的，
解决办法

     1 换分割符号

     2 删除带有该符号的数据（不要在生产库上试验）

     3 在源数据上替换掉你使用的分割符号
     
-----------------------------------------------------------------------------------------------------------------     
Oracle函数sys_connect_by_path 详解：
语法：
Oracle函数:sys_connect_by_path 主要用于树查询(层次查询) 以及 多列转行。其语法一般为：
       select ... sys_connect_by_path(column_name,'connect_symbol')  from table 
       start with ... connect by ... prior
  
--查询语句：
1.显示：'King'下的员工
select sys_connect_by_path(ename,'/') tree from emp start with ename='King' connect by  prior empno=  mgr;  
2.显示：'King'的上司
select  sys_connect_by_path(ename,'/') tree,level from emp start with ename='King' connect by prior mgr=  empno;  
 
 ----------------------------------------------------------------------------------------------
  
层次化查询主要包含两个子句,一个start with另一个是connect by。


start with:这个子句一般用于指定层次化查询的开始节点(也就是树的最顶级节点),找到最顶级节点,然后按照一定的规则开始查找其剩余的子节点

connect by:这个子句就是上面所说的规则,用于查找剩余子节点的规则

CREATE TABLE MENU
(    "ID" NUMBER, 
    "DATA" VARCHAR2(100), 
    "PID" NUMBER
) 
insert into MENU (id, data, pid)values (7, 'g', 3);
insert into MENU (id, data, pid)values (1, 'a', null);
insert into MENU (id, data, pid)values (2, 'b', null);
insert into MENU (id, data, pid)values (3, 'c', 2);
insert into MENU (id, data, pid)values (4, 'd', 2);
insert into MENU (id, data, pid)values (5, 'e', 4);
insert into MENU (id, data, pid)values (6, 'f', 1);

select ID,DATA,nvl(TO_CHAR(PID),'NULL') from menu start with PID is NULL connect by prior ID=pid

代码解析:

(1)、start with PID is NULL  指定层次化查询的根节点,
(2)、connect by prior ID=pid  当前节点的PID等于上一层节点的ID，如果满足条件,就加入到树结果集中

指定遍历查找子节点的规则----->  这一过程是递归查找,会一层一层找下去,直到不符合这一规则,则查找停止。

select ID,DATA,nvl(TO_CHAR(PID),'NULL') from menu start with (data='a' or data='b') connect by prior ID=PID
结论:根节点的定义比较灵活,但是(connect by)遍历子节点的规则,比较固定基本都是判断父节点和子节点的ID的,如果理解了这句话,层次化查询,差不多也就理解了!
Oracle SQL 中的层次化查询会检测数据中是否存在回环(死循环)，如果存在回环，则会抛出 ORA-01436: CONNECT BY loop in user data . 的错误。如果在 connect by 后面加上 nocycle 则 产生回环的最后一层的节点会被删除。
5、Oracle 还为层次化查询提供了一些伪列（ Pseudo Column ）。

(1)、CONNECT_BY_ISCYCLE 当这一行有一个子节点同时也是它的祖先节点时返回 1 ，否则返回 0 。

(2)、CONNECT_BY_ISLEAF 当这一行是叶节点时返回 1 ，否则返回 0 。伪列 LEVEL 返回这一行在树中的层次，根为第一层。

(3)、CONNECT_BY_ROOT 查询操作符可以加在 connect by 之后的某个字段之前，表示获得这一行的根节点的该字段的值。
层次化查询还支持一个特殊的函数 SYS_CONNECT_BY_PATH ， SYS_CONNECT_BY_PATH （ exp ， char ），这个函数返回从根节点到这一行计算其中每个exp 表达式的值，并把它们连接成字符串，每个节点之间用 char 字符来分割。下面是一个例子。
